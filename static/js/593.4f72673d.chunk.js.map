{"version":3,"file":"static/js/593.4f72673d.chunk.js","mappings":"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","sources":["redux/contacts/contact-selectors.js","components/Form/Form.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.js","views/styles/Contacts.styled.js","views/ContactsView.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.contactList;\n\nexport const getFilter = state => state.contacts.contactFilter;\n\nexport const getFilterContacts = createSelector(\n  [getContacts, getFilter],\n  (contactList, contactFilter) => {\n    const lowerCasedFilter = contactFilter.toLowerCase();\n    return contactList.filter(({ name }) =>\n      name.toLowerCase().includes(lowerCasedFilter)\n    );\n  }\n);\n","import { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/contacts-operations';\nimport { getContacts } from 'redux/contacts/contact-selectors';\nimport { useState } from 'react';\nimport toast from 'react-hot-toast';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport PersonAddAltRoundedIcon from '@mui/icons-material/PersonAddAltRounded';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const saveContact = name => {\n    const newContact = {\n      name: name,\n      number: number,\n    };\n\n    if (contacts.find(us => us.name === newContact.name)) {\n      toast.error('Your contact is already on the list!');\n      return;\n    }\n    dispatch(addContact(newContact));\n    toast.success('Added contact');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    saveContact(name);\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Container maxWidth=\"xs\">\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: '#1976d2' }}>\n          <PersonAddAltRoundedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Add Contact\n        </Typography>\n        <Box\n          component=\"form\"\n          onSubmit={handleSubmit}\n          noValidate\n          sx={{ mt: 1, mb: 7 }}\n        >\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            size=\"small\"\n            id=\"name\"\n            label=\"Name\"\n            name=\"name\"\n            autoComplete=\"name\"\n            value={name}\n            onChange={e => setName(e.currentTarget.value)}\n            autoFocus\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          />\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            size=\"small\"\n            name=\"number\"\n            label=\"Phone number\"\n            type=\"phone\"\n            id=\"number\"\n            value={number}\n            onChange={e => setNumber(e.currentTarget.value)}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Add Contact\n          </Button>\n        </Box>\n      </Box>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  padding: 10px;\n`;\n\nexport const Button = styled.button`\n  margin-left: 5px;\n`;\n\nexport const Container = styled.div`\n  margin-top: 30px;\n  font-family: 'Roboto', sans-serif;\n`;\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: auto auto auto;\n  justify-content: space-between;\n`;\n\nexport const Name = styled.span`\n  display: block;\n  font-weight: 500;\n  font-size: 18px;\n`;\nexport const Number = styled.span`\n  display: block;\n  margin-left: 10px;\n  font-weight: 500;\n  font-size: 16px;\n`;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  fetchContacts,\n  removeContact,\n} from 'redux/contacts/contacts-operations';\nimport { getFilterContacts } from 'redux/contacts/contact-selectors';\nimport { Name, Number, Container, List } from './ContactList.styled';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport {\n  Grid,\n  IconButton,\n  ListItem,\n  Avatar,\n  ListItemAvatar,\n} from '@mui/material';\n\nexport const ContactList = () => {\n  const contacts = useSelector(getFilterContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  function stringToColor(string) {\n    let hash = 0;\n    let i;\n    for (i = 0; i < string.length; i += 1) {\n      hash = string.charCodeAt(i) + ((hash << 5) - hash);\n    }\n\n    let color = '#';\n\n    for (i = 0; i < 3; i += 1) {\n      const value = (hash >> (i * 8)) & 0xff;\n      color += `00${value.toString(16)}`.slice(-2);\n    }\n    return color;\n  }\n\n  function stringAvatar(name) {\n    let nameFirstLetters = '';\n    if (name.includes(' ')) {\n      nameFirstLetters = `${name.toUpperCase().split(' ')[0][0]}${\n        name.toUpperCase().split(' ')[1][0]\n      }`;\n    } else {\n      nameFirstLetters = `${name.toUpperCase().split(' ')[0][0]}`;\n    }\n    return {\n      sx: {\n        bgcolor: stringToColor(name),\n      },\n      children: nameFirstLetters,\n    };\n  }\n\n  return (\n    <Container>\n      <List>\n        <Grid\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          {contacts.map(({ id, name, number }) => (\n            <ListItem key={id}>\n              <ListItemAvatar>\n                <Avatar {...stringAvatar(`${name}`)} />\n              </ListItemAvatar>\n\n              <Name>{name}:</Name>\n              <Number>{number}</Number>\n\n              <IconButton\n                edge=\"end\"\n                aria-label=\"delete\"\n                id={id}\n                onClick={() => dispatch(removeContact(id))}\n              >\n                <DeleteIcon />\n              </IconButton>\n            </ListItem>\n          ))}\n        </Grid>\n      </List>\n    </Container>\n  );\n};\n","import React from 'react';\nimport { getFilter } from 'redux/contacts/contact-selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/contacts/contacts-actions';\nimport { Box, Container, InputAdornment, TextField } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\n\nexport default function Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <Container>\n        <Box\n          sx={{\n            marginTop: 2,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <TextField\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Find contacts by name\"\n            name=\"filter\"\n            value={filter}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon />\n                </InputAdornment>\n              ),\n            }}\n            onChange={e => dispatch(filterContacts(e.currentTarget.value))}\n          />\n        </Box>\n      </Container>\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  text-align: center;\n  margin: 0 auto;\n`;\n\nexport const H1 = styled.h1`\n  color: #1976d2;\n`;\n","import ContactForm from 'components/Form/Form';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { Container } from './styles/Contacts.styled';\nimport Typography from '@mui/material/Typography';\n\nconst ContactsView = () => {\n  return (\n    <Container>\n      <ContactForm />\n      <Typography component=\"h1\" variant=\"h5\">\n        Contacts\n      </Typography>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n};\n\nexport default ContactsView;\n"],"names":["getContacts","state","contacts","contactList","getFilter","contactFilter","getFilterContacts","createSelector","lowerCasedFilter","toLowerCase","filter","name","includes","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","Container","maxWidth","Box","sx","display","flexDirection","alignItems","Avatar","m","bgcolor","PersonAddAltRounded","Typography","component","variant","onSubmit","e","preventDefault","newContact","find","us","toast","addContact","saveContact","noValidate","mt","mb","TextField","margin","required","fullWidth","size","id","label","autoComplete","value","onChange","currentTarget","autoFocus","pattern","title","type","Button","styled","List","Name","Number","ContactList","stringToColor","string","i","hash","length","charCodeAt","color","toString","slice","stringAvatar","nameFirstLetters","toUpperCase","split","children","useEffect","fetchContacts","Grid","justifyContent","map","ListItem","ListItemAvatar","IconButton","edge","onClick","removeContact","Delete","Filter","marginTop","InputProps","startAdornment","InputAdornment","position","Search","filterContacts"],"sourceRoot":""}